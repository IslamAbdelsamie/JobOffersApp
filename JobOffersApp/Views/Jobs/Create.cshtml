@model JobOffersApp.ViewModels.JobsViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}



@using (Html.BeginForm("Create", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Jobs.JobName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Jobs.JobName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Jobs.JobName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jobs.JobDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Jobs.JobDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Jobs.JobDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jobs.JobImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Imagefile" id="Imagefile" required />
                @Html.ValidationMessageFor(model => model.Jobs.JobImage, "", new { @class = "text-danger" })
                <p class="text-danger" id="error">The extension of the file is wrong</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jobs.CategoriesId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Jobs.CategoriesId, new SelectList(Model.Categories, "Id", "CategoryName"), "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Jobs.CategoriesId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jobs.SpecializationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Jobs.SpecializationId, new SelectList(Model.Specializations, "Id", "SpecializationName"), "Select Specialization", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Jobs.SpecializationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="save"/>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script>
    $(document).ready(function () {
        $("#error").fadeOut();
        $(function () {
            $("#save").click(function () {
                var fileName = document.getElementById("Imagefile").value;
                var extension = fileName.substr(fileName.lastIndexOf('.') + 1);
                var ValidExtension = ['jpg', 'png'];
                if ($.inArray(extension, ValidExtension) == -1) {
                    $("#error").fadeIn();
                    return false;
                }
            });
        });
    });
</script>